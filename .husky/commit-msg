COMMIT_MSG_FILE=$1

echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "🔍 커밋 메시지 검사 시작"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# 커밋 메시지 내용 표시
echo ""
echo "📝 커밋 메시지:"
cat "$COMMIT_MSG_FILE"
echo ""

# commitlint 실행하고 출력과 종료 코드 저장
LINT_OUTPUT=$(npx --no -- commitlint --edit "$COMMIT_MSG_FILE" 2>&1)
RESULT=$?

# commitlint 출력도 함께 표시
echo "$LINT_OUTPUT"

if [ $RESULT -eq 0 ]; then
  echo "✅ 커밋 메시지가 규칙에 맞습니다!"
else
  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
  echo "❌ 커밋 메시지가 규칙에 맞지 않습니다."
  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
  echo "💡 형식 예시: feat(ui): 로그인 버튼 추가"
  echo "🚨 사용 가능한 타입:"
  echo "feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
  echo ""
  echo "🔑 사용 가능한 범위:"
  echo "setup, bug, ui, page, components, hooks, lib, docs, api, styles, config, deps, auth, db, middleware, layout, route, public, feature, store, test, ci, other"
  echo ""
  echo "❗ 커밋 메시지를 수정하고 다시 시도해 주세요."
  echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
fi

exit $RESULT